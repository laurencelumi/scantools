#!/bin/bash
#
# Licensing:
#
# Copyright Â© Laurence Lumi 2017
# Licensed GNU General Public License v3
# which can be found here https://www.gnu.org/licenses/gpl-3.0.en.html
#

progname=`basename $0`
usage()
	{
	echo >&2 ""
	echo >&2 "$progname:" "$@"
        cat << MESSAGE1
USAGE: $progname infile [outfile]
USAGE: takepicture [-h or -help]

OPTIONS:

MESSAGE1
exit 1
	}
help()
{
    echo >&2 ""
    echo >&2 "$progname:" "$@"
    cat  >&2 << MESSAGE2

NAME: takepicture

PURPOSE: digital simulation of film negative for testing purposes, point the camera at jpg and take a picture


Arguments:

MESSAGE2
exit 1
}

function DEBUG()
{
 [ ! "$debug" -eq 0 ] &&  $@
}
function cleanup {
if [ ! -z "$tmpfileprefix" ] &&  [ "$debug" -eq 0 ]; then
    rm -f "$tmpfileprefix"*
fi
}
trap cleanup EXIT


tmpdir="./"
debug=0
tmpprefix=$tmpdir"_tp_"
comment="Processed with takepicture"
prof_dir=$HOME/.scantools
zip="-compress zip"
showtmp=0

while [ $# -gt 0 ]
do
    # get parameters
    case "$1" in
        -h|-help)    # help information
            echo ""
            help
            ;;
        -d)	debug=1
            ;;
        -)    # STDIN and end of arguments
            break
            ;;
        -*)    # any other - argument
            echo "--- UNKNOWN OPTION ---" $1
            usage
            ;;
        *)     # end of arguments
            break
            ;;
    esac
    shift   # next option
done

infile=$1
outfile=$2

if [ -z $infile ]; then
    echo "must provide a filename"
    usage
fi
if [ ! -f "$infile" -o ! -r "$infile" ]; then
    echo "Cannot open: $infile"
    exit 1
fi

if [ -z $outfile ]; then
    outfile=`basename ${infile%".jpg"}-N.tif`
fi
tmpfileprefix="$tmpprefix"`basename "${outfile%.tif}"`
DEBUG echo tmpfileprefix: $tmpfileprefix
DEBUG echo outfile: $outfile


#step to a linear capture

#convert $infile -depth 16 -fx "Fy=((u)*100+16)/116;delta=6/29;Fy>delta?Fy^3:(Fy-16/116)3*delta^2" -type TrueColor "$tmpfileprefix"_linear_cap.tif

convert $infile -depth 16 -type TrueColor -colorspace RGB "$tmpfileprefix"_linear_cap.tif

#next invert

DEBUG set -x
#Vision 3 Dmax from H-387
r_base=0.152
g_base=0.582
b_base=0.845

min_exp=`convert -size 1x1 xc: -format\
        "%[fx: 1/255 ]" \
        info:`

scale=1

convert "$tmpfileprefix"_linear_cap.tif -strip \
    -channel R -fx "density=-log($min_exp)-(-log(u));density=density>0?density:0;densitygamma=density*0.6;filmdensity=densitygamma+$r_base;opacity=10^(-filmdensity);$scale*opacity" \
    -channel G -fx "density=-log($min_exp)-(-log(u));density=density>0?density:0;densitygamma=density*0.6;filmdensity=densitygamma+$g_base;opacity=10^(-filmdensity);$scale*opacity" \
    -channel B -fx "density=-log($min_exp)-(-log(u));density=density>0?density:0;densitygamma=density*0.6;filmdensity=densitygamma+$b_base;opacity=10^(-filmdensity);$scale*opacity" \
    -set comment "$comment" "$tmpfileprefix"_linear_inverted.tif

    convert "$tmpfileprefix"_linear_inverted.tif -set colorspace RGB -colorspace sRGB -set comment "$comment" $outfile

exit 0
