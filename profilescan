#!/bin/bash
#
# Licensing:
#
# Copyright Â© Laurence Lumi 2017
# Licensed GNU General Public License v3
# which can be found here https://www.gnu.org/licenses/gpl-3.0.en.html
#

PROGNAME=`basename $0`
message1()
	{
	echo >&2 ""
	echo >&2 "$PROGNAME:" "$@"
        cat << MESSAGE1
<<<<<<< HEAD
USAGE: $PROGNAME [-f fuzz ] [-m mirror ] [ -r rotate ]
[ -a all boxes ] [-e extend] [-s show mask] [ -n number ] infile [outfile_prefix]
USAGE: profilescan [-h or -help]

OPTIONS:

-f          fuzz           fuzz value used a threshold for removing any white areas from the scan
                           if brighest area of the film base is 75% then the threshold should be less than 25%
                           expressed as (integer) percent 0 to 100;
                           default=25
-m          mirror         flips the image after it has been cropped usefull if the negative was scanned emulsion down
-r          rotate         rotates the image after being cropped, positive integer <= 360
-a          all boxes      include crops of all boxes, inluding the gaps between frames usefull for debugging
-e          extend         extends the crop X pixels
-s          show mask      show how the mask was created usefull for debugging
-n          frane number   the starting frame number to use file name defaults to #1
=======
USAGE: $PROGNAME [-d] [-dd] [-l] [-s name] [-fb] [-p name] infile
USAGE: $PROGNAME [-h] [-help]

OPTIONS:

>>>>>>> dev
MESSAGE1
exit 1
	}
message2()
{
    echo >&2 ""
    echo >&2 "$PROGNAME:" "$@"
    cat  >&2 << MESSAGE2

NAME: $PROGNAME 

PURPOSE: TODO


Arguments:

MESSAGE2
exit 1
}

function DEBUG()
{
 [ ! "$debug" -eq 0 ] &&  $@
}

tmpdir="./"
debug=0
tmpprefix=$tmpdir"_ps_"
COMMENT="Processed with profilescan"
DEBUG echo -set comment "$COMMENT"
PROF_DIR=$HOME/.scantools
mkdir -p "$PROF_DIR"

while [ $# -gt 0 ]
do
    # get parameters
    case "$1" in
        -h|-help)    # help information
            echo ""
            message2
            ;;
        -d)	debug=1
            ;;
        -dd)	debug=2
            ;;
        -l)    # list profile
            ls $PROF_DIR
            exit 0
            ;;
<<<<<<< HEAD
        -s)    # list profile
=======
        -s)    # show profile
>>>>>>> dev
            shift
            profile_name="$1"
            cat $PROF_DIR/$profile_name
            exit 0
            ;;
        -fb)	mode=filmbase
            ;;
        -p)    # profile name
            shift
            profile_name="$1"
            ;;
        -)    # STDIN and end of arguments
            break
            ;;
        -*)    # any other - argument
            echo "--- UNKNOWN OPTION ---"
            message1
            ;;
        *)     # end of arguments
            break
            ;;
    esac
    shift   # next option
done

infile=$1

if [ -z $infile ]; then
    echo "must provide a filename"
    message2
fi
if [ ! -f "$infile" -o ! -r "$infile" ]; then
    echo "Cannot open: $infile"
    exit 1
fi

if [[ $infile =~ .*.tif$ ]]; then
    DEBUG echo assuming the input file being tif is saved in a linear colorspace, even though the metadata says otherwise
    CSPACE="-set colorspace RGB"
fi

    DEBUG set -x;

if [ $mode = "filmbase" ]; then
    DEBUG echo mode = $filmbase
    
    # calculate the filmbase values 
    eval set -- `convert "$infile[0]" $CSPACE -strip \
        -format\
        "%[fx: mean.r ] %[fx: mean.g ] %[fx: mean.b ]"\
        info:`

    echo "Red:  " $1 $4 
    echo "Green:" $2 $5
    echo "Blue: " $3 $6
    R_BASE=$1
    G_BASE=$2
    B_BASE=$3

    if [ ! -z $profile_name ]; then 
        echo append data to profile $profile_name 
        DATE=`date '+%Y-%m-%d>%H:%M:%S'` 
        echo "Date FB_red GB_green FB_blue" >> "$PROF_DIR/$profile_name" 
        echo "$DATE $R_BASE $G_BASE $B_BASE" >> "$PROF_DIR/$profile_name" 
    fi

fi
exit 0
